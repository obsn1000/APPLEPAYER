(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{5557:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return t(3678)}])},3678:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return r}});var o=t(5893),a=t(9008),s=t.n(a);function r(){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s(),{children:[(0,o.jsx)("meta",{charSet:"UTF-8"}),(0,o.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),(0,o.jsx)("meta",{name:"description",content:"ApplePaySDK Demo - Simulate Apple Pay, generate K/BAN codes, and download mobile configurations"}),(0,o.jsx)("title",{children:"Apple Pay Demo"}),(0,o.jsx)("style",{children:"\n          :root {\n            --primary-color: #000;\n            --secondary-color: #333;\n            --accent-color: #0070c9;\n            --success-color: #34c759;\n            --error-color: #ff3b30;\n            --text-color: #fff;\n            --background-color: #f5f5f7;\n          }\n          \n          body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n            text-align: center;\n            padding: 50px 20px;\n            margin: 0;\n            background-color: var(--background-color);\n            color: var(--secondary-color);\n            line-height: 1.5;\n          }\n          \n          .container {\n            max-width: 800px;\n            margin: 0 auto;\n          }\n          \n          .button {\n            font-size: 18px;\n            padding: 15px 30px;\n            background-color: var(--primary-color);\n            color: var(--text-color);\n            border: none;\n            border-radius: 10px;\n            cursor: pointer;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            margin: 10px;\n            transition: all 0.2s ease;\n            position: relative;\n            overflow: hidden;\n          }\n          \n          .button:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n          }\n          \n          .button:active {\n            transform: translateY(0);\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n          }\n          \n          .button:focus {\n            outline: 2px solid var(--accent-color);\n            outline-offset: 2px;\n          }\n          \n          .button:disabled {\n            opacity: 0.6;\n            cursor: not-allowed;\n          }\n          \n          .button img {\n            height: 24px;\n            margin-right: 10px;\n          }\n          \n          .input-section {\n            margin: 30px 0;\n            padding: 25px;\n            background-color: white;\n            border-radius: 15px;\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          }\n          \n          .input-section h2 {\n            margin-bottom: 15px;\n            color: var(--secondary-color);\n            font-size: 20px;\n            font-weight: 500;\n          }\n          \n          .input-container {\n            display: flex;\n            gap: 10px;\n            align-items: center;\n            flex-wrap: wrap;\n            justify-content: center;\n          }\n          \n          .pass-input {\n            flex: 1;\n            min-width: 300px;\n            padding: 15px 20px;\n            font-size: 16px;\n            border: 2px solid #ddd;\n            border-radius: 10px;\n            background-color: #fafafa;\n            transition: all 0.2s ease;\n            font-family: monospace;\n          }\n          \n          .pass-input:focus {\n            outline: none;\n            border-color: var(--accent-color);\n            background-color: white;\n            box-shadow: 0 0 0 3px rgba(0, 112, 201, 0.1);\n          }\n          \n          .pass-input::placeholder {\n            color: #999;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n          }\n          \n          .integration-info {\n            margin-top: 15px;\n            padding: 10px;\n            background-color: #f8f9fa;\n            border-radius: 8px;\n            border-left: 4px solid var(--accent-color);\n          }\n          \n          .integration-info small {\n            color: #666;\n            line-height: 1.4;\n          }\n\n          .button-container {\n            margin-top: 30px;\n            display: flex;\n            flex-wrap: wrap;\n            justify-content: center;\n            gap: 15px;\n          }\n          \n          h1 {\n            margin-bottom: 20px;\n            font-weight: 600;\n          }\n          \n          .result {\n            margin-top: 30px;\n            padding: 20px;\n            border-radius: 10px;\n            background-color: white;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n            min-height: 60px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n          }\n          \n          .result.success {\n            border-left: 5px solid var(--success-color);\n          }\n          \n          .result.error {\n            border-left: 5px solid var(--error-color);\n          }\n          \n          .kban-details {\n            margin: 15px 0;\n            padding: 15px;\n            background: rgba(0, 112, 201, 0.05);\n            border-radius: 10px;\n            border: 1px solid rgba(0, 112, 201, 0.2);\n          }\n          \n          .kban-details code {\n            background: rgba(0, 0, 0, 0.1);\n            padding: 2px 6px;\n            border-radius: 4px;\n            font-family: monospace;\n            font-size: 14px;\n          }\n          \n          .status-valid {\n            color: #38a169;\n            font-weight: 500;\n          }\n          \n          .next-steps, .troubleshoot {\n            margin-top: 20px;\n          }\n          \n          .next-steps h4, .troubleshoot h4 {\n            margin-bottom: 10px;\n            color: var(--secondary-color);\n            font-size: 16px;\n          }\n          \n          .next-steps ul, .troubleshoot ul {\n            list-style: none;\n            padding-left: 0;\n          }\n          \n          .next-steps li, .troubleshoot li {\n            padding: 5px 0;\n            padding-left: 20px;\n            position: relative;\n          }\n          \n          .next-steps li:before {\n            content: \"\u2192\";\n            position: absolute;\n            left: 0;\n            color: var(--accent-color);\n            font-weight: bold;\n          }\n          \n          .troubleshoot li:before {\n            content: \"\u2022\";\n            position: absolute;\n            left: 0;\n            color: #e53e3e;\n            font-weight: bold;\n          }\n\n          .hidden {\n            display: none;\n          }\n          \n          .spinner {\n            width: 24px;\n            height: 24px;\n            border: 3px solid rgba(0, 0, 0, 0.1);\n            border-radius: 50%;\n            border-top-color: var(--accent-color);\n            animation: spin 1s ease-in-out infinite;\n            margin-right: 10px;\n          }\n          \n          @keyframes spin {\n            to { transform: rotate(360deg); }\n          }\n          \n          .notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            padding: 15px 20px;\n            border-radius: 8px;\n            background-color: var(--primary-color);\n            color: var(--text-color);\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            z-index: 1000;\n            opacity: 0;\n            transform: translateY(-20px);\n            transition: all 0.3s ease;\n          }\n          \n          .notification.show {\n            opacity: 1;\n            transform: translateY(0);\n          }\n          \n          .notification.success {\n            background-color: var(--success-color);\n          }\n          \n          .notification.error {\n            background-color: var(--error-color);\n          }\n          \n          @media (max-width: 600px) {\n            .button-container {\n              flex-direction: column;\n              align-items: center;\n            }\n            \n            .button {\n              width: 100%;\n              max-width: 300px;\n            }\n          }\n        "})]}),(0,o.jsxs)("div",{className:"container",children:[(0,o.jsx)("h1",{children:"ApplePaySDK Demo"}),(0,o.jsxs)("div",{className:"input-section",children:[(0,o.jsx)("h2",{children:"\ud83c\udf4e Apple Merchant Integration"}),(0,o.jsx)("p",{children:"Paste the AMID (Apple Merchant ID) JSON data from reapware after successful merchant provisioning:"}),(0,o.jsxs)("div",{className:"input-container",children:[(0,o.jsx)("textarea",{id:"reapware-pass-input",placeholder:'Paste AMID JSON from reapware: {"amid": "M90160068-4578440258079768", "bank_name": "", "account_number": "0258079768", ...}',className:"pass-input",rows:"4"}),(0,o.jsxs)("button",{id:"process-pass-button",className:"button","aria-label":"Process Apple Pay AMID",children:[(0,o.jsx)("span",{"aria-hidden":"true",children:"\ud83d\udd10"})," Validate AMID"]})]}),(0,o.jsx)("div",{className:"integration-info",children:(0,o.jsxs)("small",{children:[(0,o.jsx)("strong",{children:"Flow:"})," Reapware \u2192 Apple Pay API \u2192 AMID Generation \u2192 Merchant Validation \u2192 Wallet Integration"]})})]}),(0,o.jsxs)("div",{className:"button-container",children:[(0,o.jsxs)("button",{id:"pay-button",className:"button","aria-label":"Simulate Apple Pay payment",children:[(0,o.jsx)("span",{"aria-hidden":"true",children:"\ud83c\udf4e"}),"Simulate Apple Pay"]}),(0,o.jsxs)("button",{id:"download-config-button",className:"button","aria-label":"Download mobile configuration file",children:[(0,o.jsx)("span",{"aria-hidden":"true",children:"\ud83d\udce5"})," Download Mobile Config"]}),(0,o.jsxs)("button",{id:"generate-kban-button",className:"button","aria-label":"Generate a new K/BAN code",children:[(0,o.jsx)("span",{"aria-hidden":"true",children:"\ud83d\udd11"})," Generate K/BAN"]})]}),(0,o.jsxs)("div",{id:"result",className:"result hidden",children:[(0,o.jsx)("div",{id:"result-content"}),(0,o.jsxs)("div",{id:"result-actions",className:"button-container hidden",children:[(0,o.jsx)("button",{id:"create-pass-button",className:"button","aria-label":"Create Apple Wallet pass",children:"Create Wallet Pass"}),(0,o.jsx)("button",{id:"copy-kban-button",className:"button","aria-label":"Copy K/BAN to clipboard",children:"Copy K/BAN"})]})]})]}),(0,o.jsx)("div",{id:"notification",className:"notification",role:"alert"}),(0,o.jsx)("script",{dangerouslySetInnerHTML:{__html:"\n          // Utility functions\n          function showNotification(message, type = 'info') {\n            const notification = document.getElementById('notification');\n            notification.textContent = message;\n            notification.className = `notification ${type}`;\n            notification.classList.add('show');\n            \n            // Remove notification after 3 seconds\n            setTimeout(() => {\n              notification.classList.remove('show');\n            }, 3000);\n          }\n          \n          function showResult(content, type = '') {\n            const resultElement = document.getElementById('result');\n            const resultContent = document.getElementById('result-content');\n            \n            resultContent.innerHTML = content;\n            resultElement.className = `result ${type}`;\n            resultElement.classList.remove('hidden');\n          }\n          \n          function hideResult() {\n            const resultElement = document.getElementById('result');\n            resultElement.classList.add('hidden');\n            document.getElementById('result-actions').classList.add('hidden');\n          }\n          \n          function setButtonLoading(buttonId, isLoading) {\n            const button = document.getElementById(buttonId);\n            \n            if (isLoading) {\n              const spinner = document.createElement('div');\n              spinner.className = 'spinner';\n              button.prepend(spinner);\n              button.disabled = true;\n            } else {\n              const spinner = button.querySelector('.spinner');\n              if (spinner) {\n                button.removeChild(spinner);\n              }\n              button.disabled = false;\n            }\n          }\n\n          // Wait for DOM to be ready\n          document.addEventListener('DOMContentLoaded', function() {\n            \n            // Process reapware pass\n            document.getElementById('process-pass-button').addEventListener('click', async () => {\n              try {\n                const passInput = document.getElementById('reapware-pass-input');\n                const passValue = passInput.value.trim();\n                \n                if (!passValue) {\n                  throw new Error('Please enter a pass/code from reapware');\n                }\n                \n                hideResult();\n                setButtonLoading('process-pass-button', true);\n                \n                // First validate the pass\n                const validateResponse = await fetch('/api/kban/validate', {\n                  method: 'POST',\n                  headers: { \n                    'Content-Type': 'application/json',\n                    'X-API-Key': 'test_api_key_for_development'\n                  },\n                  body: JSON.stringify({ kban: passValue })\n                });\n                \n                if (!validateResponse.ok) {\n                  const errorData = await validateResponse.json();\n                  throw new Error(errorData.error || `Validation failed with status ${validateResponse.status}`);\n                }\n                \n                const validationData = await validateResponse.json();\n                \n                if (validationData.valid) {\n                  const data = validationData.data;\n                  \n                  if (data.type === 'amid') {\n                    // Display AMID merchant data\n                    showNotification('Apple Merchant ID validated!', 'success');\n                    showResult(`\n                      <h3>\u2705 Apple Merchant ID (AMID) Validated</h3>\n                      <div class=\"kban-details\">\n                        <p><strong>AMID:</strong> <code>${data.amid}</code></p>\n                        <p><strong>Status:</strong> <span class=\"status-valid\">${data.isValid ? 'Valid Merchant' : 'Pending'}</span></p>\n                        <p><strong>Account:</strong> ${data.accountNumber}</p>\n                        <p><strong>Bank Code:</strong> ${data.bankCode}</p>\n                        <p><strong>Merchant ID:</strong> ${data.merchantId}</p>\n                      </div>\n                      <div class=\"next-steps\">\n                        <h4>Available Actions:</h4>\n                        <ul>\n                          <li>\ud83d\udcf1 Create Apple Wallet Pass</li>\n                          <li>\ud83d\udccb Copy AMID to clipboard</li>\n                          <li>\ud83d\udcb3 Process merchant payment</li>\n                          <li>\ud83c\udfea Configure merchant settings</li>\n                        </ul>\n                      </div>\n                    `, 'success');\n                    \n                    // Store the AMID for pass generation\n                    window.generatedKban = data.amid;\n                  } else {\n                    // Display simple pass validation\n                    showNotification('Pass validated successfully!', 'success');\n                    showResult(`\n                      <h3>\u2705 Pass Validated</h3>\n                      <div class=\"kban-details\">\n                        <p><strong>Pass:</strong> <code>${data.value}</code></p>\n                        <p><strong>Status:</strong> <span class=\"status-valid\">Valid</span></p>\n                      </div>\n                      <div class=\"next-steps\">\n                        <h4>Available Actions:</h4>\n                        <ul>\n                          <li>\ud83d\udcf1 Create Apple Wallet Pass</li>\n                          <li>\ud83d\udccb Copy to clipboard</li>\n                        </ul>\n                      </div>\n                    `, 'success');\n                    \n                    window.generatedKban = data.value;\n                  }\n                  \n                  // Show action buttons\n                  const actionsContainer = document.getElementById('result-actions');\n                  actionsContainer.classList.remove('hidden');\n                  \n                  // Store the pass for later use\n                  window.generatedKban = passValue;\n                  \n                  // Clear the input\n                  passInput.value = '';\n                } else {\n                  showNotification('Invalid K/BAN', 'error');\n                  showResult(`\n                    <h3>\u274c K/BAN Validation Failed</h3>\n                    <p>The K/BAN code is not valid or may have expired.</p>\n                    <div class=\"troubleshoot\">\n                      <h4>Troubleshooting:</h4>\n                      <ul>\n                        <li>Ensure reapware completed successfully</li>\n                        <li>Check if K/BAN was copied completely</li>\n                        <li>Verify Apple Pay provisioning succeeded</li>\n                      </ul>\n                    </div>\n                  `, 'error');\n                }\n                \n              } catch (error) {\n                console.error('Error processing pass:', error);\n                showNotification('Failed to process pass', 'error');\n                showResult(`<h3>Processing Failed</h3><p>${error.message}</p>`, 'error');\n              } finally {\n                setButtonLoading('process-pass-button', false);\n              }\n            });\n            \n            // Allow Enter key to process pass\n            document.getElementById('reapware-pass-input').addEventListener('keypress', function(event) {\n              if (event.key === 'Enter') {\n                document.getElementById('process-pass-button').click();\n              }\n            });\n            // Generate K/BAN\n            document.getElementById('generate-kban-button').addEventListener('click', async () => {\n              try {\n                hideResult();\n                setButtonLoading('generate-kban-button', true);\n                \n                const response = await fetch('/api/kban/generate', {\n                  method: 'POST',\n                  headers: { \n                    'Content-Type': 'application/json',\n                    'X-API-Key': 'test_api_key_for_development'\n                  }\n                });\n                \n                if (!response.ok) {\n                  const errorData = await response.json();\n                  throw new Error(errorData.error || `Failed with status ${response.status}`);\n                }\n                \n                const data = await response.json();\n                showNotification('K/BAN generated successfully', 'success');\n                showResult(`<h3>Generated K/BAN</h3><p id=\"kban-value\">${data.kban}</p><p>Generated at: ${data.timestamp || new Date().toISOString()}</p>`, 'success');\n                \n                // Show action buttons\n                const actionsContainer = document.getElementById('result-actions');\n                actionsContainer.classList.remove('hidden');\n                \n                // Store the K/BAN for later use\n                window.generatedKban = data.kban;\n              } catch (error) {\n                console.error('Error generating K/BAN:', error);\n                showNotification('Failed to generate K/BAN', 'error');\n                showResult(`<h3>K/BAN Generation Failed</h3><p>${error.message}</p>`, 'error');\n              } finally {\n                setButtonLoading('generate-kban-button', false);\n              }\n            });\n\n            // Download mobile config\n            document.getElementById('download-config-button').addEventListener('click', () => {\n              try {\n                hideResult();\n                setButtonLoading('download-config-button', true);\n                \n                showNotification('Downloading configuration file...', 'info');\n                \n                // Create an iframe to handle the download\n                const iframe = document.createElement('iframe');\n                iframe.style.display = 'none';\n                iframe.src = '/api/generate-mobileconfig';\n                document.body.appendChild(iframe);\n                \n                // Remove the iframe after download starts\n                setTimeout(() => {\n                  document.body.removeChild(iframe);\n                  setButtonLoading('download-config-button', false);\n                  showNotification('Download started', 'success');\n                  showResult('<h3>Configuration File</h3><p>Your mobile configuration file download has started.</p>', 'success');\n                }, 1000);\n              } catch (error) {\n                console.error('Download error:', error);\n                showNotification('Download failed', 'error');\n                showResult(`<h3>Download Failed</h3><p>${error.message}</p>`, 'error');\n                setButtonLoading('download-config-button', false);\n              }\n            });\n\n            // Create pass button\n            document.getElementById('create-pass-button').addEventListener('click', async () => {\n              try {\n                if (!window.generatedKban) {\n                  throw new Error('No K/BAN available');\n                }\n                \n                setButtonLoading('create-pass-button', true);\n                showNotification('Creating Apple Wallet pass...', 'info');\n                \n                // Create an iframe to handle the download\n                const iframe = document.createElement('iframe');\n                iframe.style.display = 'none';\n                iframe.src = `/api/pass/create?kban=${window.generatedKban}`;\n                document.body.appendChild(iframe);\n                \n                // Remove the iframe after download starts\n                setTimeout(() => {\n                  document.body.removeChild(iframe);\n                  setButtonLoading('create-pass-button', false);\n                  showNotification('Pass download started', 'success');\n                }, 1000);\n              } catch (error) {\n                console.error('Error creating pass:', error);\n                showNotification('Failed to create pass', 'error');\n                setButtonLoading('create-pass-button', false);\n              }\n            });\n            \n            // Copy K/BAN button\n            document.getElementById('copy-kban-button').addEventListener('click', () => {\n              try {\n                if (!window.generatedKban) {\n                  throw new Error('No K/BAN available to copy');\n                }\n                \n                navigator.clipboard.writeText(window.generatedKban)\n                  .then(() => {\n                    showNotification('K/BAN copied to clipboard', 'success');\n                  })\n                  .catch((error) => {\n                    console.error('Clipboard error:', error);\n                    showNotification('Failed to copy to clipboard', 'error');\n                  });\n              } catch (error) {\n                showNotification(error.message, 'error');\n              }\n            });\n\n            // Apple Pay simulation (simplified for demo)\n            document.getElementById('pay-button').addEventListener('click', async () => {\n              showNotification('Apple Pay simulation would require real certificates', 'info');\n              showResult('<h3>Apple Pay Demo</h3><p>This would initiate Apple Pay in a real environment with proper certificates.</p>', 'success');\n            });\n          });\n        "}})]})}},9008:function(n,e,t){n.exports=t(5443)}},function(n){n.O(0,[774,888,179],(function(){return e=5557,n(n.s=e);var e}));var e=n.O();_N_E=e}]);